{"ast":null,"code":"var _jsxFileName = \"D:\\\\React-Projects\\\\youtube-clone\\\\src\\\\components\\\\VideoCard.jsx\";\nimport React from \"react\";\nimport { Typography, Card, CardContent, CardMobile, CardMedia } from \"@mui/material\";\nimport { Link } from \"react-router-dom\";\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\nimport { demoThumbnailUrl, demoVideoUrl, demoVideoTitle, demoChannelUrl, demoChannelTitle } from \"../utils/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoCard = _ref => {\n  var _snippet$thumbnails, _snippet$thumbnails$h;\n\n  let {\n    video: {\n      id: {\n        videoId\n      },\n      snippet\n    }\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      width: {\n        xs: '100%',\n        sm: '358px',\n        md: '220px'\n      },\n      boxShadow: 'none',\n      borderRadius: '0'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: videoId ? `/video/${videoId}` : `/video/cV2gBU6hKfY`,\n      children: /*#__PURE__*/_jsxDEV(CardMedia, {\n        image: (snippet === null || snippet === void 0 ? void 0 : (_snippet$thumbnails = snippet.thumbnails) === null || _snippet$thumbnails === void 0 ? void 0 : (_snippet$thumbnails$h = _snippet$thumbnails.high) === null || _snippet$thumbnails$h === void 0 ? void 0 : _snippet$thumbnails$h.url) || demoThumbnailUrl,\n        alt: snippet === null || snippet === void 0 ? void 0 : snippet.title,\n        sx: {\n          width: {\n            xs: \"100%\",\n            sm: \"358px\"\n          },\n          height: 180\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        backgroundColor: \"#1e1e1e\",\n        height: \"106px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: videoId ? `/video/$videoId` : demoVideoUrl,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          fontWeight: \"bold\",\n          color: \"#FFF\",\n          children: (snippet === null || snippet === void 0 ? void 0 : snippet.title.slice(0, 60)) || demoVideoTitle.slice(0, 60)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: snippet !== null && snippet !== void 0 && snippet.channelId ? `/channel/${snippet === null || snippet === void 0 ? void 0 : snippet.channelId}` : demoChannelUrl,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          color: \"gray\",\n          children: [(snippet === null || snippet === void 0 ? void 0 : snippet.channelTitle) || demoVideoTitle, /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n            sx: {\n              fontSize: '12px',\n              color: 'gray',\n              ml: '5px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = VideoCard;\nexport default VideoCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoCard\");","map":{"version":3,"names":["React","Typography","Card","CardContent","CardMobile","CardMedia","Link","CheckCircleIcon","demoThumbnailUrl","demoVideoUrl","demoVideoTitle","demoChannelUrl","demoChannelTitle","VideoCard","video","id","videoId","snippet","width","xs","sm","md","boxShadow","borderRadius","thumbnails","high","url","title","height","backgroundColor","slice","channelId","channelTitle","fontSize","color","ml"],"sources":["D:/React-Projects/youtube-clone/src/components/VideoCard.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Typography,\r\n  Card,\r\n  CardContent,\r\n  CardMobile,\r\n  CardMedia,\r\n} from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CheckCircleIcon from \"@mui/icons-material/CheckCircle\";\r\n\r\nimport {\r\n  demoThumbnailUrl,demoVideoUrl,demoVideoTitle,demoChannelUrl,demoChannelTitle} from \"../utils/constants\";\r\n\r\nconst VideoCard = ({ video: { id: { videoId },snippet}}) => (\r\n\r\n    <Card sx={{width : {xs:'100%' , sm:'358px' , md:'220px',},boxShadow:'none',borderRadius:'0'}}>\r\n          <Link to={videoId ? `/video/${videoId}` : `/video/cV2gBU6hKfY`}>\r\n               <CardMedia\r\n               image={snippet?.thumbnails?.high?.url ||     demoThumbnailUrl}\r\n                    alt={snippet?.title}\r\n                    sx={{ width: { xs: \"100%\", sm: \"358px\" },    height: 180 }}\r\n          />\r\n          </Link>\r\n\r\n      <CardContent sx={{ backgroundColor: \"#1e1e1e\", height: \"106px\" }}>\r\n        <Link to={videoId ? `/video/$videoId` : demoVideoUrl}>\r\n          <Typography variant=\"subtitle1\" fontWeight=\"bold\" color=\"#FFF\">\r\n            {snippet?.title.slice(0, 60) || demoVideoTitle.slice(0, 60)}\r\n          </Typography>\r\n        </Link>\r\n\r\n        <Link to={snippet?.channelId ? `/channel/${snippet?.channelId}` : demoChannelUrl}>\r\n          <Typography variant=\"subtitle2\" color=\"gray\">\r\n            {snippet?.channelTitle || demoVideoTitle}\r\n            <CheckCircleIcon sx={{ fontSize:'12px',color:'gray' , ml:'5px'}}/>\r\n          </Typography>\r\n        </Link>\r\n      </CardContent>\r\n    </Card>\r\n  \r\n);\r\n\r\nexport default VideoCard;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,UADF,EAEEC,IAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,SALF,QAMO,eANP;AAOA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,eAAP,MAA4B,iCAA5B;AAEA,SACEC,gBADF,EACmBC,YADnB,EACgCC,cADhC,EAC+CC,cAD/C,EAC8DC,gBAD9D,QACqF,oBADrF;;;AAGA,MAAMC,SAAS,GAAG;EAAA;;EAAA,IAAC;IAAEC,KAAK,EAAE;MAAEC,EAAE,EAAE;QAAEC;MAAF,CAAN;MAAkBC;IAAlB;EAAT,CAAD;EAAA,oBAEd,QAAC,IAAD;IAAM,EAAE,EAAE;MAACC,KAAK,EAAG;QAACC,EAAE,EAAC,MAAJ;QAAaC,EAAE,EAAC,OAAhB;QAA0BC,EAAE,EAAC;MAA7B,CAAT;MAAgDC,SAAS,EAAC,MAA1D;MAAiEC,YAAY,EAAC;IAA9E,CAAV;IAAA,wBACM,QAAC,IAAD;MAAM,EAAE,EAAEP,OAAO,GAAI,UAASA,OAAQ,EAArB,GAA0B,oBAA3C;MAAA,uBACK,QAAC,SAAD;QACA,KAAK,EAAE,CAAAC,OAAO,SAAP,IAAAA,OAAO,WAAP,mCAAAA,OAAO,CAAEO,UAAT,qGAAqBC,IAArB,gFAA2BC,GAA3B,KAAsClB,gBAD7C;QAEK,GAAG,EAAES,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEU,KAFnB;QAGK,EAAE,EAAE;UAAET,KAAK,EAAE;YAAEC,EAAE,EAAE,MAAN;YAAcC,EAAE,EAAE;UAAlB,CAAT;UAAyCQ,MAAM,EAAE;QAAjD;MAHT;QAAA;QAAA;QAAA;MAAA;IADL;MAAA;MAAA;MAAA;IAAA,QADN,eASE,QAAC,WAAD;MAAa,EAAE,EAAE;QAAEC,eAAe,EAAE,SAAnB;QAA8BD,MAAM,EAAE;MAAtC,CAAjB;MAAA,wBACE,QAAC,IAAD;QAAM,EAAE,EAAEZ,OAAO,GAAI,iBAAJ,GAAuBP,YAAxC;QAAA,uBACE,QAAC,UAAD;UAAY,OAAO,EAAC,WAApB;UAAgC,UAAU,EAAC,MAA3C;UAAkD,KAAK,EAAC,MAAxD;UAAA,UACG,CAAAQ,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEU,KAAT,CAAeG,KAAf,CAAqB,CAArB,EAAwB,EAAxB,MAA+BpB,cAAc,CAACoB,KAAf,CAAqB,CAArB,EAAwB,EAAxB;QADlC;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAOE,QAAC,IAAD;QAAM,EAAE,EAAEb,OAAO,SAAP,IAAAA,OAAO,WAAP,IAAAA,OAAO,CAAEc,SAAT,GAAsB,YAAWd,OAAZ,aAAYA,OAAZ,uBAAYA,OAAO,CAAEc,SAAU,EAApD,GAAwDpB,cAAlE;QAAA,uBACE,QAAC,UAAD;UAAY,OAAO,EAAC,WAApB;UAAgC,KAAK,EAAC,MAAtC;UAAA,WACG,CAAAM,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEe,YAAT,KAAyBtB,cAD5B,eAEE,QAAC,eAAD;YAAiB,EAAE,EAAE;cAAEuB,QAAQ,EAAC,MAAX;cAAkBC,KAAK,EAAC,MAAxB;cAAiCC,EAAE,EAAC;YAApC;UAArB;YAAA;YAAA;YAAA;UAAA,QAFF;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAPF;IAAA;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QAFc;AAAA,CAAlB;;KAAMtB,S;AA6BN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}